.App {
  text-align: center;
}

.main-header {
  background-color: #ffc7e7;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  /* overflow: hidden; */
  /* align-items: center; */
  justify-content: center;
  font-size: calc(10px + 2vmin);
}

.inside-header {
  display: flex;
  align-items: center; /* Align items vertically */
  margin: 0 auto; /* Center the container horizontally */
}

.hsuhay {
  font-style: italic;
  font-family: Georgia, 'Times New Roman', Times, serif;
  font-size: 20px;
  color: #d60000;
  left: 10%;
  position: absolute;
  animation: fade-in-left 2s;
}

.question {
  opacity: 0;
  font-style: italic;
  font-weight: bolder;
  font-family: Georgia, 'Times New Roman', Times, serif;
  font-size: 70px;
  color: #d60000;
  position: absolute;
  top: 10%;
  left: 10%;
  animation: fade-in-top 2s forwards;
  animation-delay: 2s;
}

button {
  background-color: #ff4d6a;
  color: #ffffff;
  border: none;
  width: 100px; /* Corrected property */
  height: 50px; /* Add height property if needed */
  border-radius: 5px;
  font-size: 16px;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.3s ease;
}

.button-yes {
  opacity: 0; /* Set initial opacity to 0 */
  right: 10%;
  margin-right: 30px;
  animation: fadeInRightAnimation 2s forwards; /* Apply fade-in animation */
  animation-delay: 3.5s; /* Delay the start of the animation by 0.5 seconds */
}

.no-container {
  opacity: 0;
  animation: fadeInRightAnimation 2s forwards; /* Apply fade-in animation */
  animation-delay: 3.5s; /* Delay the start of the animation by 0.5 seconds */
}

button:hover {
  background-color: #ff6284;
}

@keyframes fade-in-left {
  from {
    left: -100%;
    opacity: 0;
  }
  to {
    left: 10%;
    opacity: 1;
  }
}

@keyframes fade-in-top {
  from {
    opacity: 0;
    transform: translateY(-1000px); /* Optional: starting position */
  }
  to {
    opacity: 1;
    transform: translateY(0); /* Optional: ending position */
  }
}

@keyframes fadeInRightAnimation {
  from {
    opacity: 0;
    transform: translateX(1000px); /* Optional: starting position */
  }
  to {
    opacity: 1;
    transform: translateX(0); /* Optional: ending position */
  }
}